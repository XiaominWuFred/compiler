; ModuleID = 'testhello.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@wg4 = common global i32 0, align 4

; Function Attrs: nounwind uwtable
define void @pop_direct_branch() #0 {
  call void asm sideeffect "popq %rbp\0A\09addq $$8, %rsp\0A\09leave\0A\09movq (%rsp), %rax\0A\09addq $$8, %rsp\0A\09jmp *%rax\0A\09", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @pow3(i32 %b) #0 {
  %1 = alloca i32, align 4
  store i32 %b, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = add nsw i32 %2, 5
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @pow2(i32 %a) #0 {
  %1 = alloca i32, align 4
  store i32 %a, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = call i32 @pow3(i32 %2)
  %4 = add nsw i32 %3, 2
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  store i32 16, i32* %c, align 4
  %1 = load i32* %c, align 4
  %2 = call i32 @pow2_clone(i32 %1)
  %3 = load i32* @wg4, align 4
  store i32 %3, i32* %d, align 4
  %4 = load i32* %d, align 4
  %5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32 %4)
  ret i32 0
}

declare i32 @printf(i8*, ...) #1

; Function Attrs: nounwind uwtable
define i32 @pow2_clone(i32 %a) #0 {
  %1 = alloca i32, align 4
  store i32 %a, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = call i32 @pow3_clone(i32 %2)
  %4 = load i32* @wg4, align 4
  %5 = add nsw i32 %4, 2
  store i32 %5, i32* @wg4, align 4
  call void @pop_direct_branch()
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define i32 @pow3_clone(i32 %b) #0 {
  %1 = alloca i32, align 4
  store i32 %b, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = add nsw i32 %2, 5
  store i32 %3, i32* @wg4, align 4
  call void @pop_direct_branch()
  ret i32 %3
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.4 (tags/RELEASE_34/final)"}
!1 = metadata !{i32 151707, i32 151719, i32 151745, i32 151763, i32 151793, i32 151819, i32 151841}
