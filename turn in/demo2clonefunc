; ModuleID = 'testhello.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@wwww = common global i32 0, align 4
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@wg4 = common global i32 0, align 4

; Function Attrs: nounwind uwtable
define void @pop_direct_branch() #0 {
  call void asm sideeffect "popq %rbp\0A\09addq $$8, %rsp\0A\09leave\0A\09movq (%rsp), %rax\0A\09addq $$8, %rsp\0A\09jmp *%rax\0A\09", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @pig(i32 %a) #0 {
  %1 = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %a, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = add nsw i32 %2, 100
  store i32 %3, i32* %b, align 4
  %4 = load i32* %b, align 4
  %5 = mul nsw i32 %4, 2
  store i32 %5, i32* %c, align 4
  %6 = load i32* %c, align 4
  store i32 %6, i32* @wwww, align 4
  %7 = load i32* %c, align 4
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define i32 @dog() #0 {
  %omg = alloca i32, align 4
  store i32 1, i32* %omg, align 4
  %1 = load i32* %omg, align 4
  %2 = add nsw i32 %1, 10
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define i32 @pow(i32 %s) #0 {
  %1 = alloca i32, align 4
  store i32 %s, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = add nsw i32 %2, 1
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @pow1(i32 %s) #0 {
  %1 = alloca i32, align 4
  %abc = alloca i32, align 4
  store i32 %s, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = call i32 @pow(i32 %2)
  store i32 %3, i32* %abc, align 4
  %4 = load i32* %abc, align 4
  %5 = call i32 @pow(i32 %4)
  store i32 %5, i32* %abc, align 4
  %6 = load i32* %abc, align 4
  %7 = add nsw i32 %6, 5
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define i32 @people(i32 %oo) #0 {
  %1 = alloca i32, align 4
  %sss = alloca i32, align 4
  %ss = alloca i32, align 4
  store i32 %oo, i32* %1, align 4
  %2 = load i32* %1, align 4
  store i32 %2, i32* %sss, align 4
  store i32 10, i32* %ss, align 4
  %3 = load i32* %sss, align 4
  %4 = call i32 @pow(i32 %3)
  store i32 %4, i32* %sss, align 4
  %5 = load i32* %sss, align 4
  %6 = call i32 @pow(i32 %5)
  store i32 %6, i32* %ss, align 4
  %7 = load i32* %ss, align 4
  %8 = call i32 @pow1(i32 %7)
  store i32 %8, i32* %sss, align 4
  %9 = load i32* @wwww, align 4
  %10 = load i32* %sss, align 4
  %11 = add nsw i32 %9, %10
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %s = alloca i32, align 4
  %d = alloca i32, align 4
  %o = alloca i32, align 4
  %wof = alloca i32, align 4
  %hey = alloca i32, align 4
  %hehe = alloca i32, align 4
  store i32 0, i32* %1
  store i32 88, i32* %s, align 4
  %2 = load i32* %s, align 4
  %3 = call i32 @pig_clone(i32 %2)
  %4 = load i32* @wg4, align 4
  store i32 %4, i32* %d, align 4
  %5 = load i32* %s, align 4
  %6 = call i32 @pow_clone(i32 %5)
  %7 = load i32* @wg4, align 4
  store i32 %7, i32* %d, align 4
  %8 = call i32 @dog()
  store i32 %8, i32* %o, align 4
  %9 = call i32 @people_clone(i32 55)
  %10 = load i32* @wg4, align 4
  store i32 %10, i32* %hey, align 4
  %11 = load i32* @wwww, align 4
  store i32 %11, i32* %wof, align 4
  %12 = call i32 @people_clone(i32 4)
  %13 = load i32* @wg4, align 4
  store i32 %13, i32* %hehe, align 4
  %14 = load i32* %d, align 4
  %15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32 %14)
  %16 = load i32* %wof, align 4
  %17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32 %16)
  %18 = load i32* @wwww, align 4
  %19 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32 %18)
  %20 = load i32* %o, align 4
  %21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32 %20)
  %22 = load i32* %hey, align 4
  %23 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32 %22)
  %24 = load i32* %hehe, align 4
  %25 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32 %24)
  ret i32 0
}

declare i32 @printf(i8*, ...) #1

; Function Attrs: nounwind uwtable
define i32 @people_clone(i32 %oo) #0 {
  %1 = alloca i32, align 4
  %sss = alloca i32, align 4
  %ss = alloca i32, align 4
  store i32 %oo, i32* %1, align 4
  %2 = load i32* %1, align 4
  store i32 %2, i32* %sss, align 4
  store i32 10, i32* %ss, align 4
  %3 = load i32* %sss, align 4
  %4 = call i32 @pow_clone(i32 %3)
  %5 = load i32* @wg4, align 4
  store i32 %5, i32* %sss, align 4
  %6 = load i32* %sss, align 4
  %7 = call i32 @pow_clone(i32 %6)
  %8 = load i32* @wg4, align 4
  store i32 %8, i32* %ss, align 4
  %9 = load i32* %ss, align 4
  %10 = call i32 @pow1_clone(i32 %9)
  %11 = load i32* @wg4, align 4
  store i32 %11, i32* %sss, align 4
  %12 = load i32* @wwww, align 4
  %13 = load i32* %sss, align 4
  %14 = add nsw i32 %12, %13
  store i32 %14, i32* @wg4, align 4
  call void @pop_direct_branch()
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define i32 @pow1_clone(i32 %s) #0 {
  %1 = alloca i32, align 4
  %abc = alloca i32, align 4
  store i32 %s, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = call i32 @pow_clone(i32 %2)
  %4 = load i32* @wg4, align 4
  store i32 %4, i32* %abc, align 4
  %5 = load i32* %abc, align 4
  %6 = call i32 @pow_clone(i32 %5)
  %7 = load i32* @wg4, align 4
  store i32 %7, i32* %abc, align 4
  %8 = load i32* %abc, align 4
  %9 = add nsw i32 %8, 5
  store i32 %9, i32* @wg4, align 4
  call void @pop_direct_branch()
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define i32 @pow_clone(i32 %s) #0 {
  %1 = alloca i32, align 4
  store i32 %s, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = add nsw i32 %2, 1
  store i32 %3, i32* @wg4, align 4
  call void @pop_direct_branch()
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @pig_clone(i32 %a) #0 {
  %1 = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 %a, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = add nsw i32 %2, 100
  store i32 %3, i32* %b, align 4
  %4 = load i32* %b, align 4
  %5 = mul nsw i32 %4, 2
  store i32 %5, i32* %c, align 4
  %6 = load i32* %c, align 4
  store i32 %6, i32* @wwww, align 4
  %7 = load i32* %c, align 4
  store i32 %7, i32* @wg4, align 4
  call void @pop_direct_branch()
  ret i32 %7
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.ident = !{!0}

!0 = metadata !{metadata !"clang version 3.4 (tags/RELEASE_34/final)"}
!1 = metadata !{i32 152224, i32 152236, i32 152262, i32 152280, i32 152310, i32 152336, i32 152358}
